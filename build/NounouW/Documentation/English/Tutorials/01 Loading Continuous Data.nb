(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     20299,        621]
NotebookOptionsPosition[     16202,        492]
NotebookOutlinePosition[     18218,        543]
CellTagsIndexPosition[     18175,        540]
WindowTitle->01 Loading Continuous Data - Wolfram Mathematica
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[" ", "TutorialColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 0}}],

Cell[TextData[{
 ButtonBox["Mathematica",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:NounouW/guide/NounouW"],
 StyleBox[" > ", "LinkTrailSeparator"]
}], "LinkTrail"],

Cell[BoxData[GridBox[{
   {Cell["NOUNOU W TUTORIAL", "PacletNameCell"], Cell[TextData[Cell[BoxData[
     ActionMenuBox[
      FrameBox["\<\"URL \[RightGuillemet]\"\>",
       StripOnInput->
        False], {"\<\"NounouW/tutorial/01 Loading Continuous Data\"\>":>
      None, "\<\"Copy Mathematica url\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell["NounouW/tutorial/01 Loading Continuous Data"]}, Visible -> 
           False]]; SelectionMove[
        DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; Null], 
      Delimiter, "\<\"Copy web url\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell[
             BoxData[
              MakeBoxes[
               Hyperlink[
               "http://reference.wolfram.com/mathematica/NounouW/tutorial/01 \
Loading Continuous Data.html"], StandardForm]], "Input", TextClipboardType -> 
             "PlainText"]}, Visible -> False]]; 
       SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; 
       Null], "\<\"Go to web url\"\>":>FrontEndExecute[{
        NotebookLocate[{
          URL[
           StringJoin[
           "http://reference.wolfram.com/mathematica/", 
            "NounouW/tutorial/01 Loading Continuous Data", ".html"]], 
          None}]}]},
      Appearance->None,
      MenuAppearance->Automatic]],
     LineSpacing->{1.4, 0}]], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[CellGroupData[{

Cell["01 Loading Continuous Data", "Title",
 CellID->509267359],

Cell["XXXX.", "Caption",
 CellID->1891092685],

Cell["Load Neuralynx ncs files", "MathCaption",
 CellID->836781195],

Cell[BoxData[
 RowBox[{"<<", "NounouW`"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->2058623809],

Cell[TextData[{
 StyleBox["HokahokaW`",
  StripOnInput->False,
  FontFamily->"Helvetica",
  FontWeight->"Bold",
  FontVariations->{"Underline"->True}],
 "\n",
 StyleBox["Thu 4 Aug 2016 10:52:14     [Mathematica: 10.4.1 for Microsoft \
Windows (64-bit) (April 11, 2016)]",
  StripOnInput->False,
  FontFamily->"Helvetica",
  FontSize->10],
 "\n",
 StyleBox["     Artifact info as of: Tue 2 Aug 2016 08:45:33",
  StripOnInput->False,
  FontFamily->"Helvetica",
  FontSize->10],
 "\n",
 StyleBox["     Local repo path:   C:\\prog\\_w\\HokahokaW\\.git",
  StripOnInput->False,
  FontFamily->"Helvetica",
  FontSize->10],
 "\n",
 StyleBox["     Current branch [hash]:  dev \
[ada9721f7ce16dc5c1a303a892475b6cbf3373e7]",
  StripOnInput->False,
  FontFamily->"Helvetica",
  FontSize->10],
 "\n",
 StyleBox["     Remote:  origin \
(https://ktakagaki@github.com/ktakagaki/HokahokaW.git)",
  StripOnInput->False,
  FontFamily->"Helvetica",
  FontSize->10]
}], "Text",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 Background->GrayLevel[0.85],
 CellID->155067522],

Cell[TextData[{
 StyleBox["NounouW`",
  StripOnInput->False,
  FontFamily->"Helvetica",
  FontWeight->"Bold",
  FontVariations->{"Underline"->True}],
 "\n",
 StyleBox["Thu 4 Aug 2016 10:52:15     [Mathematica: 10.4.1 for Microsoft \
Windows (64-bit) (April 11, 2016)]",
  StripOnInput->False,
  FontFamily->"Helvetica",
  FontSize->12],
 "\n",
 StyleBox["     Git info loaded: Thu 4 Aug 2016 10:52:15",
  StripOnInput->False,
  FontFamily->"Helvetica",
  FontSize->12],
 "\n",
 StyleBox["     Local repo path:   \
C:\\Users\\ktakagaki\\prog\\_w\\NounouW\\.git",
  StripOnInput->False,
  FontFamily->"Helvetica",
  FontSize->12],
 "\n",
 StyleBox["     Current branch [hash]:  dev \
[c6fa48445eaa327d13d379f0ef7b3853f71ee9ea]",
  StripOnInput->False,
  FontFamily->"Helvetica",
  FontSize->12],
 "\n",
 StyleBox["     Remote:  origin (https://github.com/ktakagaki/NounouW.git)",
  StripOnInput->False,
  FontFamily->"Helvetica",
  FontSize->12]
}], "Text",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 Background->GrayLevel[0.85],
 CellID->19345781],

Cell[BoxData["\<\"Welcome to nounou, a Scala/Java adapter for \
neurophysiological data.\\nLast GIT info from file resource: \
NNGit.gson.txt\\n  + current HEAD is: \
1a58c41332bd336e036338dfedc8b6c19c080f3e\\n  + current branch is: master\\n  \
+ remote names are: https://github.com/ktakagaki/nounou.git, \
https://github.com/slentzen/nounou.git, \
https://github.com/dowa4213/nounou.git\\n\"\>"], "Print",
 CellLabel->"During evaluation of In[1]:=",
 CellID->278735313],

Cell["The starting point is to have some continuous data files:", "Text",
 CellID->540242572],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempFiles", "=", 
  RowBox[{
   RowBox[{
   "FileNames", "[", 
    "\"\<S:\\\\VSDdata\\\\proj.SPP\\\\data\\\\SPP.Nlx2\\\\SPP067\\\\2016-07-\
07_15-10-56\\\\*.ncs\>\"", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"4", ";;", "7"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[1]:=",
 CellID->226352429],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"S:\\\\VSDdata\\\\proj.SPP\\\\data\\\\SPP.Nlx2\\\\SPP067\\\\\
2016-07-07_15-10-56\\\\CSC13.ncs\"\>", 
   ",", "\<\"S:\\\\VSDdata\\\\proj.SPP\\\\data\\\\SPP.Nlx2\\\\SPP067\\\\2016-\
07-07_15-10-56\\\\CSC14.ncs\"\>", 
   ",", "\<\"S:\\\\VSDdata\\\\proj.SPP\\\\data\\\\SPP.Nlx2\\\\SPP067\\\\2016-\
07-07_15-10-56\\\\CSC15.ncs\"\>", 
   ",", "\<\"S:\\\\VSDdata\\\\proj.SPP\\\\data\\\\SPP.Nlx2\\\\SPP067\\\\2016-\
07-07_15-10-56\\\\CSC16.ncs\"\>"}], "}"}]], "Output",
 ImageSize->{509, 63},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->148958703]
}, Open  ]],

Cell["\<\
We can now use the standard function NNLoad to load the contents of these \
files into a data object (actually, a java object for nounou, the Java/Scala \
package which underlies NounouW). \
\>", "Text",
 CellID->869539933],

Cell["\<\
Note, for large files such as these *.ncs files, nounou will not load all of \
the data into memory. Instead, it will load file pointers and file \
information (e.g. sampling rate, etc.) in a way that the data can be streamed \
rapidly from disk.\
\>", "Text",
 CellID->85002631],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempJavaDataObject", "=", 
  RowBox[{"NNLoad", "[", " ", "tempFiles", " ", "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->729692899],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{
    "nounou", ".", "elements", ".", "data", ".", "NNDataChannelArray"}], 
    "]"}], "\[RightGuillemet]"}],
  JLink`Objects`vm1`JavaObject19154881273135105]], "Output",
 ImageSize->{489, 17},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->347825936]
}, Open  ]],

Cell["\<\
Now, we can interact with this Java object to access information, or to call \
specific segments of data.\
\>", "Text",
 CellID->480999311],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NNPrintInfo", "[", " ", 
  RowBox[{"tempJavaDataObject", ",", " ", "\"\<Timing\>\""}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->363680526],

Cell[BoxData["\<\"nounou.elements.traits.NNTiming(fs=32000.0, segmentCount=1, \
1a58c41332)\\n==================================================\\nsegment\\\
tsamples (  mm:ss  ) (    s   )\\t   start Ts  (  hh:mm )\\n   0\\t  61212160 \
( 31:52.88) (  1912.9)\\t  2984886413 ( 0:00.00)\"\>"], "Output",
 ImageSize->{501, 63},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 FontSize->9,
 CellLabel->"Out[3]=",
 CellID->141824148]
}, Open  ]],

Cell["\<\
This call was directly equivalent with a direct call to the java object like \
this:\
\>", "Text",
 CellID->733562366],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempJavaDataObject", "@", 
  RowBox[{
   RowBox[{"timing", "[", "]"}], "@", 
   RowBox[{"toStringFull", "[", "]"}]}]}]], "Input",
 CellLabel->"In[4]:=",
 CellID->104165434],

Cell[BoxData["\<\"nounou.elements.traits.NNTiming(fs=32000.0, segmentCount=1, \
1a58c41332)\\n==================================================\\nsegment\\\
tsamples (  mm:ss  ) (    s   )\\t   start Ts  (  hh:mm )\\n   0\\t  61212160 \
( 31:52.88) (  1912.9)\\t  2984886413 ( 0:00.00)\"\>"], "Output",
 ImageSize->{501, 63},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 FontSize->9,
 CellLabel->"Out[4]=",
 CellID->219568796]
}, Open  ]],

Cell["Of note here:", "Text",
 CellID->2894472],

Cell[TextData[{
 "The Mathematica Java calling syntax is modified from Java (e.g. using ",
 StyleBox["@", "Program"],
 " and ",
 StyleBox["[]", "Program"],
 "), in order to avoid pre-defined definitions in Mathematica for Java \
symbols such as ",
 StyleBox[".", "Program"],
 " . The above input in native Java would be ",
 StyleBox["tempJavaDataObject.timing().toStringFull()", "Program"],
 ". "
}], "Text",
 CellID->678455],

Cell[TextData[{
 "The Java method ",
 StyleBox["toStringFull()", "Program"],
 " returns a Java string, which Mathematica automatically converts to a \
Mathematica string. The same type of conversion is done for numerical values \
(including ",
 StyleBox["BigInteger", "Program"],
 "and ",
 StyleBox["breeze.Complex", "Program"],
 ") and Arrays of numerical or string values (to Mathematica ",
 StyleBox["List[]", "Program"],
 " objects). See the ",
 ButtonBox["Mathematica JLink guide",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/JLink/tutorial/\
CallingJavaFromTheWolframLanguage.html"], None},
  ButtonNote->
   "https://reference.wolfram.com/language/JLink/tutorial/\
CallingJavaFromTheWolframLanguage.html"],
 " for the full syntax of calling JVM functions from Mathematica."
}], "Text",
 CellID->280174873],

Cell["\<\
You can access data from this object using the following NounouW command:\
\>", "Text",
 CellID->480493008],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tempData", "=", 
   RowBox[{"NNReadTrace", "[", " ", "\[IndentingNewLine]", 
    RowBox[{"(*", "1", "*)"}], " ", 
    RowBox[{"tempJavaDataObject", ",", "  ", 
     RowBox[{"(*", "2", "*)"}], " ", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "3"}], "]"}], ",", " ", 
     RowBox[{"(*", "3", "*)"}], " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", " ", ";;", " ", "10"}], ",", " ", "0"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "tempData", "]"}]}], "Input",
 FontSize->10,
 CellLabel->"In[7]:=",
 CellID->218736180],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "11"}], "}"}]], "Output",
 ImageSize->{63, 17},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[8]=",
 CellID->739367261]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"tempData", ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", " ", 
    RowBox[{"1", "/", "3"}]}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Medium"}]}], "]"}]], "Input",
 CellLabel->"In[11]:=",
 CellID->246501619],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., -4.882961661678564}, {2., -7.507553554830793}, {
      3., -5.920591014785259}, {4., -6.775109305579008}, {
      5., -11.505478415330117`}, {6., -15.74755135891337}, {
      7., -18.09747665859618}, {8., -19.440291115557784`}, {
      9., -18.524735803993053`}, {10., -16.479995608165154`}, {
      11., -18.555254314378544`}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., -2.7161474243087014`}, {2., -4.638813578594636}, {
      3., -5.1576282551479835`}, {4., -7.019257388662936}, {
      5., -13.489181590387034`}, {6., -22.00384598793903}, {
      7., -25.757622765354427`}, {8., -24.018067673381438`}, {
      9., -22.064883008710012`}, {10., -22.186957050251976`}, {
      11., -23.957030652610456`}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., -5.64592442131584}, {2., -10.10162693759753}, {
      3., -12.054811602268956`}, {4., -12.817774361906231`}, {
      5., -16.05273646276828}, {6., -22.30903109179394}, {
      7., -28.53480721043411}, {8., -30.762658468574955`}, {
      9., -27.832881471567816`}, {10., -23.071993851431216`}, {
      11., -20.661031530977425`}}]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., -10.254219489524985`}, {2., -12.115848623039938`}, {
      3., -12.20740415419641}, {4., -13.855403715012926`}, {
      5., -19.470809625943275`}, {6., -27.06991871193054}, {
      7., -31.52562122821223}, {8., -30.03021421932317}, {
      9., -24.93362298494617}, {10., -20.661031530977425`}, {
      11., -19.989624302496622`}}]}, {}}, {}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Medium,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 11.}, {-31.52562122821223, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 ImageSize->{364, 120},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[11]=",
 CellID->111466104]
}, Open  ]],

Cell["(*1*) The first argument is naturally the Java data object.", "Text",
 CellID->947321068],

Cell["\<\
(*2*) The next argument specifies data channels to read. Note above that we \
have specified channels [0 to 3] above. Since we loaded 4 *.ncs files, we \
have 4 channels which we can call, and since nounou (and Java in general) is \
zero-indexed, we need to call channels [0 to 3].\
\>", "Text",
 CellID->197914190],

Cell["\<\
(*3*) The third argument is a time specification. Here, we call data sample \
numbers 0 to 10, from segment 0. For more information regarding specifying \
timing (for example, specifying in frames, in timestamps, or in ms) see the \
help file for NNReadTrace.\
\>", "Text",
 CellID->622176659]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"01 Loading Continuous Data - Wolfram Mathematica",
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "built" -> "{2016, 8, 4, 11, 16, 48.1618374}", "context" -> "NounouW`", 
    "keywords" -> {}, "index" -> True, "label" -> "Nounou W Tutorial", 
    "language" -> "en", "paclet" -> "NounouW", "status" -> "None", "summary" -> 
    "XXXX. Load Neuralynx ncs files HokahokaW` Thu 4 Aug 2016 10:52:14 \
[Mathematica: 10.4.1 for Microsoft Windows (64-bit) (April 11, 2016)] \
Artifact info as of: Tue 2 Aug 2016 08:45:33 Local repo path: \
C:\\prog\\_w\\HokahokaW\\.git Current branch [hash]: dev \
[ada9721f7ce16dc5c1a303a892475b6cbf3373e7] Remote: origin \
(https://ktakagaki@github.com/ktakagaki/HokahokaW.git)", "synonyms" -> {}, 
    "title" -> "01 Loading Continuous Data", "type" -> "Tutorial", "uri" -> 
    "NounouW/tutorial/01 Loading Continuous Data"}, "LinkTrails" -> "", 
  "SearchTextTranslated" -> ""},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "9.0 for Microsoft Windows (64-bit) (January 25, 2013)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[619, 21, 78, 1, 70, "TutorialColorBar"],
Cell[700, 24, 180, 5, 70, "LinkTrail"],
Cell[883, 31, 1969, 44, 70, "AnchorBarGrid",
 CellID->1],
Cell[CellGroupData[{
Cell[2877, 79, 63, 1, 70, "Title",
 CellID->509267359],
Cell[2943, 82, 45, 1, 70, "Caption",
 CellID->1891092685],
Cell[2991, 85, 67, 1, 70, "MathCaption",
 CellID->836781195],
Cell[3061, 88, 96, 3, 70, "Input",
 CellID->2058623809],
Cell[3160, 93, 1055, 38, 70, "Text",
 CellID->155067522],
Cell[4218, 133, 1052, 38, 70, "Text",
 CellID->19345781],
Cell[5273, 173, 472, 8, 70, "Print",
 CellID->278735313],
Cell[5748, 183, 93, 1, 70, "Text",
 CellID->540242572],
Cell[CellGroupData[{
Cell[5866, 188, 320, 10, 70, "Input",
 CellID->226352429],
Cell[6189, 200, 650, 15, 84, "Output",
 CellID->148958703]
}, Open  ]],
Cell[6854, 218, 233, 5, 70, "Text",
 CellID->869539933],
Cell[7090, 225, 289, 6, 70, "Text",
 CellID->85002631],
Cell[CellGroupData[{
Cell[7404, 235, 160, 4, 70, "Input",
 CellID->729692899],
Cell[7567, 241, 408, 12, 38, "Output",
 CellID->347825936]
}, Open  ]],
Cell[7990, 256, 149, 4, 70, "Text",
 CellID->480999311],
Cell[CellGroupData[{
Cell[8164, 264, 170, 4, 70, "Input",
 CellID->363680526],
Cell[8337, 270, 448, 9, 84, "Output",
 CellID->141824148]
}, Open  ]],
Cell[8800, 282, 128, 4, 70, "Text",
 CellID->733562366],
Cell[CellGroupData[{
Cell[8953, 290, 196, 6, 70, "Input",
 CellID->104165434],
Cell[9152, 298, 448, 9, 84, "Output",
 CellID->219568796]
}, Open  ]],
Cell[9615, 310, 47, 1, 70, "Text",
 CellID->2894472],
Cell[9665, 313, 425, 12, 70, "Text",
 CellID->678455],
Cell[10093, 327, 858, 22, 70, "Text",
 CellID->280174873],
Cell[10954, 351, 117, 3, 70, "Text",
 CellID->480493008],
Cell[CellGroupData[{
Cell[11096, 358, 611, 17, 70, "Input",
 CellID->218736180],
Cell[11710, 377, 204, 7, 38, "Output",
 CellID->739367261]
}, Open  ]],
Cell[CellGroupData[{
Cell[11951, 389, 273, 7, 70, "Input",
 CellID->246501619],
Cell[12227, 398, 3189, 69, 141, "Output",
 CellID->111466104]
}, Open  ]],
Cell[15431, 470, 95, 1, 70, "Text",
 CellID->947321068],
Cell[15529, 473, 325, 6, 70, "Text",
 CellID->197914190],
Cell[15857, 481, 303, 6, 70, "Text",
 CellID->622176659]
}, Open  ]],
Cell[16175, 490, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

